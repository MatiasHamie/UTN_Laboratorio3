// Con esto incluyo el archivo *.scss de colores por ejemplo
@import "./colors";
@import "./mixins";

*{
    box-sizing: border-box;
}

/* Con esto lo que hago es hacer que el minimo
que se va a poder correr todo es 418px, menos de eso
ya el usuario va a tener que scrollear para la der o izq
para visualizar todo el contenido */
body {
    min-width: 418px;
}

/* HEADER */
header {
    @include mx_footer_header($background_color);
    // background-color: black;
    // display: flex;
    // justify-content: space-between;
    // /* si tuviera un logo, y el header sea mas alto
    // iba a tomar todo el alto del mismo para el nav..
    // al poner center los pongo en el centro y quedan como
    // separados*/
    // align-items: center;
}

nav {
    display: flex;
    a {
        color: white;
        background-color: blue;
        text-decoration: none;
        text-transform: uppercase;
        padding: 10px 10px;
        border: 1px solid black;
    }
}

/* Div opcional */
.importante {
    background-color: yellow;
    border: 1px dashed red;
    text-align: center;
}

/* MAIN */
.contenedor {
    display: flex;
    background-color: $main_color;
}

main {
    flex-basis: 80%;
}

aside {
    flex-basis: 20%;
    background-color: green;
}

article {
    width: 300px;
    height: 300px;
    background-color: $odd_article_color;
    // background-color: gray;
    border: 1px solid black;
    margin: 10px;
}

section {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
}

/* Como el footer era igual que el header
en el header puse header, footer {} */
/* footer {
    background-color: black;
    display: flex;
    justify-content: space-between;
} */

footer {
    background-color: black;
    display: flex;
    justify-content: space-between;
    /* si tuviera un logo, y el header sea mas alto
    iba a tomar todo el alto del mismo para el nav..
    al poner center los pongo en el centro y quedan como
    separados*/
    align-items: center;

    &>p{
        color: white;
    }
}

/* Media queries */
/* screen hace incapie a la pantalla del navegador 
   Max-width, cuando pase por debajo de esos px que haga
   lo que ponga adentro de la media query*/
@media screen and (max-width:700px){
    header, footer {
        flex-direction: column-reverse;
    }
}

@media screen and (max-width:620px){
    aside {
        display: none;
    }
}

/*NOTAS*/
/* Como body es el contenedor de los anuncios (los div)
al body le ponemos que el display sea de estilo flex 

Con el flex-wrap: wrap; solito se va acomodando en la pantalla
de manera responsive*/
/* body{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-evenly;
} */

/* div{
    background-color: yellow;
    width: 200px;
    height: 200px;
    border: black 1px solid;/*sin el solid no funciona*/
/*} */

/* De esta manera podemos cambiar el orden
en como se muestran los divs */
/* #div1{
    order: 2;
}

#div2{
    order: 0;
}

#div3{
    order: 1;
} */


/* Los valores q pongo de flex-basis, pisan el width y heigth q haya
puesto antes */
/* grow es que tanto tamaño ocupa en toda la row
si pones el 2, es el doble.. y asi.. y shrink es q tan comprimido
va a estar, tmb si pones 2 , es el doble y asi.. */
/* Si ponemos dos div, ponemos uno con el tamaño del
aside.. y el otro va a ser contenedor de otros divs */
/* #div1{
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 80%;
} */

/* #div2{
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 20%;
} */

